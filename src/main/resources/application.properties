# 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

#git config --global credential.helper cache
#git commit -m "my comment"
#git push -u origin master

#############
#1. settings - developement (from GitHub)
#2. config --global credential.helper cache
#3. commit with comment
#4. push
############

##################################################################
#
#			CORE
#
##################################################################
# HTTP server port
server.port=${PORT:8080}

# Context path of the application
#server.servlet.context-path=/report
# Default HTTP session time out
server.servlet.session.timeout=30m
# Log levels
logging.level.root=INFO
logging.level.hyung.jin.seo.jae=DEBUG
# Actuator
management.endpoint.shutdown.enabled=true
#management.endpoint.info.enabled=true
#management.endpoint.restart.enabled=true
management.endpoints.web.exposure.include=shutdown,health
# No restart while developing
spring.devtools.restart.enabled=true
# actuator enabled in Swagger
springdoc.show-actuator=true




#################################################################
#
#			JPA DATA 
#
##################################################################

# jpa common
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true


spring.datasource.url=jdbc:mysql://localhost:3306/jae?useSSL=false&serverTimezone=UTC

#spring.datasource.url=jdbc:mysql://15.164.232.206:50594/jae?useSSL=false&allowPublicKeyRetrieval=true

spring.datasource.username=root
spring.datasource.password=J@va1973M
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect




#########################################################################################
#
#		RHAP_Tables
#
###########################################################################################


# get hospital ID by facility code. ex> 1050 --> 4 (Box Hill Hospital)
sql.hospital.id.by.facility.code=SELECT HospitalId FROM hips.HospitalCode WHERE CodeSystemId = 2 AND Code = :facCode

#########################################################################################
#		Upload - Successful upload
###########################################################################################
# success upload count 
sql.total.success.count.discharge=SELECT count(distinct(pcehrAuditId)) AS 'Discharge Summary Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 1 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.total.success.count.lis=SELECT count(distinct(pcehrAuditId)) AS 'Pathology Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 7 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.total.success.count.ris=SELECT count(distinct(pcehrAuditId)) AS 'Radiology Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 8 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.total.success.count.psml=SELECT count(distinct(pcehrAuditId)) AS 'PSML Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 18 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.total.success.count.shs=SELECT count(distinct(pcehrAuditId)) AS 'Shared Health Summary Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 6 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.total.success.count.es=SELECT count(distinct(pcehrAuditId)) AS 'Event Summary Upload Success' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage = 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 4 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 

#########################################################################################
#		Summary - Success & failure figures
###########################################################################################
# count showing how many message reached from AIE to HTS
sql.count.total.discharge.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE LIKE 'Discharge Summary%' 
sql.count.total.lis.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Pathology from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE = 'Pathology' 
sql.count.total.ris.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Radiology from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE = 'Radiology' 
sql.count.total.psml.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'PSML from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE = 'PSML 1A' 
sql.count.total.shs.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Shared Health Summary from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE = 'Shared Health Summary' 
sql.count.total.es.aie.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Event Summary from AIE to HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE SERVICENAME = 'HL7 Message Received' AND ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND DOCUMENT_TYPE = 'Event Summary' 

# count from HTS to MHR
sql.count.total.discharge.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'Discharge Summary Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 1 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.total.lis.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'Pathology Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 7 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.total.ris.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'Radiology Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 8 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.total.psml.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'PSML Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 18 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.total.shs.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'Shared Health Summary Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 6 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.total.es.hts.mhr=SELECT count(distinct(PcehrAuditId)) AS 'Event Summary Upload Trial' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 4 AND hp.HospitalId  IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 

# count showing how many AR or AE messages at HSIE
sql.count.error.discharge.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE LIKE 'Discharge Summary%'
sql.count.error.lis.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE = 'Pathology'
sql.count.error.ris.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE = 'Radiology'
sql.count.error.psml.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE = 'PSML 1A'
sql.count.error.shs.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE = 'Shared Health Summary'
sql.count.error.es.b4.hsie=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Not AA' FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE = 'Event Summary'

# count showing how many error messages encountered at HTS
sql.count.error.discharge.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Discharge Summary Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PCEHRService_CDA1A Invalid Response Received', 'PCEHRService_CDA3A Remove Invalid Response Received', 'PCEHRService_CDA3A Upload Invalid Response Received', 'PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE LIKE 'Discharge Summary%'
sql.count.error.lis.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Pathology Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PathologyImagingService_CDA3A Upload or Remove LIS Invalid Response Received', 'PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE = 'Pathology'
sql.count.error.ris.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Radiology Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PathologyImagingService_CDA3A Upload or Remove RIS Invalid Response Received', 'PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE = 'Radiology'
sql.count.error.psml.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'PSML Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE = 'PSML 1A'
sql.count.error.shs.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Shared Health Summary Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE = 'Shared Health Summary'
sql.count.error.es.at.hts=SELECT count(distinct(AUDIT_PARENT_ID)) as 'Event Summary Error Count at HTS' FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND E.EVENT_NOTES NOT LIKE '%Transient Error%' AND DOCUMENT_TYPE = 'Event Summary'

# count showing how many error messages encountered at HIPS
sql.count.error.discharge.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'Discharge Summary Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 1 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.error.lis.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'Pathology Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 7 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.error.ris.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'Radiology Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 8 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.error.psml.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'PSML Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 18 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.error.shs.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'Shared Health Summary Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 6 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
sql.count.error.es.at.hips=SELECT count(distinct(PcehrAuditId)) AS 'Event Summary Error Count at HIPS' FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND pa.DocumentTypeId = 4 AND hp.HospitalId IN (:hospitalId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 

# count IHI fail prior to uploading from HIPS to MHR (only for LIS & RIS)  
sql.count.notok.lis.upload=SELECT count(distinct(H.HL7MessageLogId)) FROM hips.HL7MessageLog H with (NOLOCK), dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK) WHERE H.MessageControlId = P.MSG_CONT_ID AND H.FailureReason like 'Upload of HL7MessageLog ID %' AND H.ShouldRetry = 0 AND P.ACK_RESP_SENT_MSG <> 'Duplicate Message Received' AND P.DOCUMENT_TYPE = 'Pathology' AND H.DateCreated >= :fromDate AND H.DateCreated <= :toDate AND P.SENDING_FAC IN (:facCode)
sql.count.notok.ris.upload=SELECT count(distinct(H.HL7MessageLogId)) FROM hips.HL7MessageLog H with (NOLOCK), dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK) WHERE H.MessageControlId = P.MSG_CONT_ID AND H.FailureReason like 'Upload of HL7MessageLog ID %' AND H.ShouldRetry = 0 AND P.ACK_RESP_SENT_MSG <> 'Duplicate Message Received' AND P.DOCUMENT_TYPE = 'Radiology' AND H.DateCreated >= :fromDate AND H.DateCreated <= :toDate AND P.SENDING_FAC IN (:facCode)



###########################################
# List error details
###########################################
# Ack is 'AR' or 'AE'
sql.list.exception.detail.b4.hsie=SELECT format(RECORD_DTM, 'dd/MM/yyyy HH:mm:ss') as DateStamp, DOCUMENT_TYPE as DocumentType, ACK_RESP_SENT_MSG as ServiceMessage, PATIENT_GIVEN_NAME as GivenNames, PATIENT_FAMILY_NAME as FamilyName, format(PATIENT_DOB_DTM, 'dd/MM/yyyy') as DOB, PATIENT_SEX as CurrentSexId, PATIENT_UR as PatientUR, AUDIT_PARENT_ID, format(ADMIT_DTM, 'dd/MM/yyyy HH:mm:ss') as Admission, VISIT_ID as Episode FROM dbo.RHAP_HIPS_AUDIT_PARENT WITH (NOLOCK) WHERE ACK_RESP_SENT_DTM >= :fromDate AND ACK_RESP_SENT_DTM <= :toDate AND SENDING_FAC IN (:facCode) AND ACK_RESP_SENT_CODE <> 'AA' AND DOCUMENT_TYPE IN (:docName)
# exclude duplicate message
# exclude consent set to 'N'
sql.list.exception.detail.at.hts=SELECT format(P.RECORD_DTM, 'dd/MM/yyyy HH:mm:ss') as DateStamp, DOCUMENT_TYPE as DocumentType, EVENT_NOTES as Event, PATIENT_GIVEN_NAME as GivenNames, PATIENT_FAMILY_NAME as FamilyName, format(PATIENT_DOB_DTM, 'dd/MM/yyyy') as DOB, PATIENT_SEX as CurrentSexId, PATIENT_UR as PatientUR, AUDIT_PARENT_ID as UID, format(P.ADMIT_DTM, 'dd/MM/yyyy HH:mm:ss') as Admission, P.VISIT_ID as Episode FROM dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK), dbo.RHAP_HIPS_EVENTS E WITH (NOLOCK) WHERE  P.AUDIT_PARENT_ID = E.AUDIT_CHILD_ID AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND E.EVENT_SERVICE IN ('PathologyImagingService_CDA3A Upload or Remove LIS Invalid Response Received', 'PathologyImagingService_CDA3A Upload or Remove RIS Invalid Response Received', 'PCEHRService_CDA1A Invalid Response Received', 'PCEHRService_CDA3A Remove Invalid Response Received', 'PCEHRService_CDA3A Upload Invalid Response Received', 'Consent Search Consent Not Found', 'PCEHR existence explicitly checked', 'PCEHRexist Invalid Response Received', 'Bad CDA', 'Consent Search Consent Not Found', 'Document not found for removal', 'Patient Under Age', 'Document validation error', 'Remove Processing Error', 'UploadOrSupersede Processing Error', 'IHIService Invalid Response Received', 'Rhapsody Message Check - Message filtering') AND P.DOCUMENT_TYPE IN (:docName) AND E.EVENT_NOTES NOT LIKE '%Transient Error%' 
sql.list.exception.detail.at.hips=SELECT format(pa.DateCreated, 'dd/MM/yyyy HH:mm:ss') as DateStamp, (CASE pa.DocumentTypeId WHEN 1 THEN 'Discharge Summary' WHEN 7 THEN 'Pathology Report' WHEN 8 THEN 'Radiology Report' WHEN 18 THEN 'Pharmacist Shared Medicines List' WHEN 6 THEN 'Shared Health Summary' WHEN 4 THEN 'Event Summary' END) as DocumentType, pa.ServiceMessage as Event, pmn.GivenNames as GivenNames, pmn.FamilyName as FamilyName, format(pm.DateOfBirth, 'dd/MM/yyyy') as DOB, (CASE pm.CurrentSexId WHEN 1 THEN 'M' WHEN 2 THEN 'F' WHEN 3 THEN 'I' END) as CurrentSexId, hp.Mrn as PatientUR, pa.CorrelationId as UID, '' as Admission, '' as Episode FROM hips.PcehrAudit pa, hips.HospitalPatient hp, hips.PatientMasterName pmn, hips.PatientMaster pm WHERE pa.PatientMasterId = hp.PatientMasterId AND pmn.PatientMasterId = pa.PatientMasterId AND pmn.PatientMasterId = pm.PatientMasterId AND pa.SystemInteractionID = 35 AND pa.ServiceMessage <> 'OK' AND pmn.NameTypeId = 2 AND hp.HospitalId IN (:hospitalId) AND pa.DocumentTypeId IN (:docId) AND pa.DateCreated <= :toDate AND pa.DateCreated >= :fromDate 
# only for LIS & RIS
sql.list.exception.detail.notok=SELECT format(P.RECORD_DTM, 'dd/MM/yyyy HH:mm:ss') as DateStamp, P.DOCUMENT_TYPE as DocumentType, H.FailureReason as Event, P.PATIENT_GIVEN_NAME as GivenNames, P.PATIENT_FAMILY_NAME as FamilyName, format(P.PATIENT_DOB_DTM, 'dd/MM/yyyy') as DOB, P.PATIENT_SEX as CurrentSexId, P.PATIENT_UR as PatientUR, P.AUDIT_PARENT_ID as UID, format(P.ADMIT_DTM, 'dd/MM/yyyy HH:mm:ss') as Admission, P.VISIT_ID as Episode FROM hips.HL7MessageLog H with (NOLOCK), dbo.RHAP_HIPS_AUDIT_PARENT P WITH (NOLOCK) WHERE H.MessageControlId = P.MSG_CONT_ID AND H.FailureReason like 'Upload of HL7MessageLog ID %' AND H.ShouldRetry = 0 AND P.ACK_RESP_SENT_MSG <> 'Duplicate Message Received' AND P.ACK_RESP_SENT_DTM >= :fromDate AND P.ACK_RESP_SENT_DTM <= :toDate AND P.SENDING_FAC IN (:facCode) AND P.DOCUMENT_TYPE IN (:docName) 



###########################################
# Retreive the original HL7 message
###########################################
sql.retreive.original.message=SELECT LOG_MSG FROM dbo.RHAP_HIPS_ARCHIVE WITH (NOLOCK) WHERE EVENT_ID = (SELECT top 1 EVENT_ID FROM dbo.RHAP_HIPS_EVENTS WHERE EVENT_SERVICE = 'HL7 Message Received' AND AUDIT_CHILD_ID = :auditId)


###########################################
# List audit transactions
###########################################
sql.list.audit.detail=SELECT distinct(format(pa.DateCreated, 'dd/MM/yyyy HH:mm:ss')) as DateStamp, pmn.GivenNames, pmn.FamilyName, hp.Mrn, pa.ihi, pa.ServiceName, (SELECT Description FROM hips.DocumentType d where d.DocumentTypeId = pa.DocumentTypeId) as Document, pa.UserName, pa.UserModified, pm.PatientMasterId FROM hips.PcehrAudit pa WITH (NOLOCK), hips.HospitalPatient hp WITH (NOLOCK), hips.PatientMasterName pmn WITH (NOLOCK), hips.PatientMaster pm WITH (NOLOCK) WHERE pa.PatientMasterId = hp.PatientMasterId and pmn.PatientMasterId = pa.PatientMasterId and pm.PatientMasterId = pmn.PatientMasterId and pa.SystemInteractionID NOT IN (0, 1, 2, 10, 11, 20, 26, 27, 28, 29, 30, 35) and hp.HospitalId in (SELECT HospitalId FROM hips.HospitalCode WHERE Code IN (:facCode)) and pa.DateCreated >= :fromDate and pa.DateCreated <= :toDate
sql.audit.additional.query=and (pmn.GivenNames LIKE '%' + :patientInfo + '%' OR pmn.FamilyName LIKE '%' + :patientInfo + '%' OR hp.Mrn LIKE '%' + :patientInfo + '%' OR pa.Ihi LIKE '%' + :patientInfo + '%')


###########################################
# Retreive patient information
###########################################
sql.retreive.patient.info=SELECT pmn.GivenNames, pmn.FamilyName, pm.CurrentSexId, format(pm.DateOfBirth, 'dd/MM/yyyy') as 'Dob', CONCAT(ad.AddressLine1, ' ', ad.AddressLine2, ' ', ad.PlaceName, ' ', ad.InternationalStateCode, ' ', ad.Postcode) as 'Address', hp.Mrn, pmi.Ihi, (CASE pmi.IhiStatusId WHEN -1 THEN 'Unknown' WHEN 1 THEN 'Active' WHEN 2 THEN 'Deactived' WHEN 3 THEN 'Retired' WHEN 4 THEN 'Retired' WHEN 5 THEN 'Resolved' WHEN 100 THEN 'Duplicated IHI' WHEN 101 THEN 'Potential Duplicate Patient' WHEN 102 THEN 'Merge Conflict' WHEN 103 THEN 'Service Unavailable' WHEN 104 THEN 'Medicare Dva Change Mismatch' WHEN 105 THEN 'Demographic Mismatch' WHEN 106 THEN 'Address Change Mismatch' END) as 'IhiStatus', CONCAT(pm.MedicareNumber,pm.MedicareIrn) as 'Medicare', pm.DvaNumber FROM hips.PatientMaster pm WITH (NOLOCK), hips.PatientMasterIhi pmi WITH (NOLOCK), hips.PatientMasterName pmn WITH (NOLOCK), hips.PatientMasterAddress pma WITH (NOLOCK), hips.HospitalPatient hp WITH (NOLOCK), hips.Address ad WITH (NOLOCK) WHERE pm.PatientMasterId = pmi.PatientMasterId AND pm.PatientMasterId = pmn.PatientMasterId AND pm.PatientMasterId = pma.PatientMasterId AND pm.PatientMasterId = hp.PatientMasterId AND pma.AddressId = ad.AddressId AND pm.PatientMasterId = :patientId


###########################################
# list facilities per hospital
###########################################
sql.report.site.list=SELECT Description FROM hips.Hospital WITH (NOLOCK) WHERE HealthProviderOrganisationId = (SELECT HealthProviderOrganisationId FROM hips.HealthProviderOrganisation WHERE name = :agencyName)
#sql.report.site.list=SELECT Description FROM hips.Hospital WITH (NOLOCK) WHERE HealthProviderOrganisationId IN (SELECT HealthProviderOrganisationId FROM hips.HealthProviderOrganisation WHERE name IN (:agencyName))
sql.report.site.list.all=SELECT Description FROM hips.Hospital WITH (NOLOCK) WHERE Description LIKE '[0-9]%'
sql.report.agency.list=SELECT Name FROM hips.HealthProviderOrganisation WITH (NOLOCK)


###########################################
# user management
###########################################
sql.report.user.list=SELECT username, password, enabled, firstname, lastname, role FROM RHAP.REPORT_USERS WITH (NOLOCK) WHERE ENABLED = 1
sql.report.user.find=SELECT username, password, enabled, firstname, lastname, role FROM RHAP.REPORT_USERS WITH (NOLOCK) WHERE username = :username AND ENABLED = 1
sql.report.user.add=INSERT INTO RHAP.REPORT_USERS VALUES (:username, :password, 1, :firstname, :lastname, :role)
sql.report.user.modify=UPDATE RHAP.REPORT_USERS SET FIRSTNAME = :firstname, LASTNAME = :lastname, ROLE = :role WHERE username = :username AND ENABLED = 1
sql.report.user.delete=UPDATE RHAP.REPORT_USERS SET ENABLED = 0 WHERE username = :username
sql.report.password.update=UPDATE RHAP.REPORT_USERS SET PASSWORD = :password WHERE username = :username AND ENABLED = 1



